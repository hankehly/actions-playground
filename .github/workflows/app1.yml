name: App 1 Workflow

#on:
#  push:
#    paths:
#      - 'app1/*'
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8.0"

      - name: install poetry
        run: |
          curl -O -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          chmod +x get-poetry.py
          python get-poetry.py --preview
          echo "::add-path::$HOME/.poetry/bin"

      - name: configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry check

      - uses: actions/cache@v1
        id: pycache
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('poetry.lock') }}

      - run: echo ${{ steps.pycache.outputs.cache-hit }}

      - run: poetry install
        if: steps.pycache.outputs.cache-hit != 'true'

      - uses: actions/cache@v1
        id: nodecache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - run: npm ci
        if: steps.nodecache.outputs.cache-hit != 'true'

  test_unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8.0"

      - name: install poetry
        run: |
          curl -O -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          chmod +x get-poetry.py
          python get-poetry.py --preview
          echo "::add-path::$HOME/.poetry/bin"

      - name: configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry check

      - uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('poetry.lock') }}

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - run: npm ci
      - run: poetry run python app1/test_unit.py
      - run: npm test

  test_ui:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8.0"

      - name: install poetry
        run: |
          curl -O -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
          chmod +x get-poetry.py
          python get-poetry.py --preview
          echo "::add-path::$HOME/.poetry/bin"

      - name: configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry check

      - uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ hashFiles('poetry.lock') }}

      - uses: nanasess/setup-chromedriver@master
        with:
          chromedriver-version: "78.0.3904.105"

      - run: poetry run python app1/test_selenium.py

      - uses: actions/upload-artifact@v1
        # if: failure() << only perform this step if the previous step failed
        with:
          name: artifacts
          path: artifacts
